{"version":3,"sources":["MapChart.js","index.js"],"names":["MapChart","_useState","useState","_useState2","Object","slicedToArray","data","setData","useEffect","csv","then","counties","colorScale","scaleQuantile","domain","map","d","unemployment_rate","range","react_default","a","createElement","index_umd","projection","geography","_ref","geographies","geo","cur","find","s","id","key","rsmKey","fill","App","src_MapChart","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sOAmDeA,EA5CE,WACf,IAAAC,EAAwBC,mBAAS,IAAjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAaI,EAAbJ,EAAA,GAEAK,oBAAU,WAERC,YAAI,oCAAoCC,KAAK,SAAAC,GAC3CJ,EAAQI,MAET,IAEH,IAAMC,EAAaC,cAChBC,OAAOR,EAAKS,IAAI,SAAAC,GAAC,OAAIA,EAAEC,qBACvBC,MAAM,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGJ,OACEC,EAAAC,EAAAC,cAACC,EAAA,cAAD,CAAeC,WAAW,gBACxBJ,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaE,UA5BJ,6DA6BN,SAAAC,GAAA,OAAAA,EAAGC,YACUX,IAAI,SAAAY,GACd,IAAMC,EAAMtB,EAAKuB,KAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAII,KACxC,OACEZ,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACEU,IAAKL,EAAIM,OACTT,UAAWG,EACXO,KAAMN,EAAMhB,EAAWgB,EAAIX,mBAAqB,eClChE,SAASkB,IACP,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAD,OAKN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOtB,EAAAC,EAAAC,cAACc,EAAD,MAASE","file":"static/js/main.3801ea81.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantile } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst MapChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n\n  const colorScale = scaleQuantile()\n    .domain(data.map(d => d.unemployment_rate))\n    .range([\n      \"#ffedea\",\n      \"#ffcec5\",\n      \"#ffad9f\",\n      \"#ff8a75\",\n      \"#ff5533\",\n      \"#e2492d\",\n      \"#be3d26\",\n      \"#9a311f\",\n      \"#782618\"\n    ]);\n\n  return (\n    <ComposableMap projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => {\n            const cur = data.find(s => s.id === geo.id);\n            return (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill={cur ? colorScale(cur.unemployment_rate) : \"#EEE\"}\n              />\n            );\n          })\n        }\n      </Geographies>\n    </ComposableMap>\n  );\n};\n\nexport default MapChart;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  return (\n    <div>\n      <MapChart />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}